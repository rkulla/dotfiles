{
  "version": 3,
  "sources": ["../node_modules/osascript-tag/dist/index.js", "../src/viewFromcURLCommand.tsx", "../src/utilities/checkForInstallation.tsx", "../src/utilities/jsa.tsx"],
  "sourcesContent": ["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildProcess = __importStar(require(\"child_process\"));\nfunction isTemplateString(value) {\n    return Array.isArray(value) && Object.prototype.hasOwnProperty.call(value, 'raw');\n}\nfunction buildString(strings, replacements) {\n    var result = '';\n    var totalStrings = strings.length;\n    for (var i = 0; i < totalStrings; i++) {\n        var value = i < totalStrings - 1 ? replacements[i] : '';\n        result += strings[i] + value;\n    }\n    return result.trim();\n}\nfunction runScript(strings, replacements, options) {\n    if (options === void 0) { options = {}; }\n    if (process.platform !== 'darwin') {\n        return Promise.reject(new Error('osascript-tag requires macOS'));\n    }\n    return new Promise(function (resolve, reject) {\n        var argv = options.argv || [];\n        var flags = [];\n        var script = buildString(strings, replacements);\n        var language = 'AppleScript';\n        if (options.language === 'JavaScript') {\n            language = options.language;\n            script = \"(function(...argv){\" + script + \"})(\" + argv.map(function (value) { return JSON.stringify(value); }) + \")\";\n        }\n        if (options.parse) {\n            flags = ['-s', 's'];\n        }\n        if (typeof options.flags === 'string') {\n            flags = ['-s', options.flags];\n        }\n        var child = ChildProcess.spawn('osascript', ['-l', language].concat(flags, ['-e', script]));\n        var errorString = '';\n        child.stderr.on('data', function (error) {\n            errorString += error.toString();\n        });\n        var dataString = '';\n        child.stdout.on('data', function (data) {\n            dataString += data.toString();\n        });\n        child.on('close', function () {\n            if (errorString) {\n                reject(errorString);\n            }\n            else {\n                var result = dataString;\n                if (options.parse) {\n                    try {\n                        result = JSON.parse(dataString);\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n                resolve(result);\n            }\n        });\n        child.on('error', function (error) {\n            reject(error);\n        });\n    });\n}\nfunction osascript(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {});\n    }\n    return function (script) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(script, replacements, scriptOrOptions);\n    };\n}\nfunction execJXA(scriptOrOptions) {\n    var replacementsArray = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        replacementsArray[_i - 1] = arguments[_i];\n    }\n    if (isTemplateString(scriptOrOptions)) {\n        return runScript(scriptOrOptions, replacementsArray, {\n            language: 'JavaScript',\n        });\n    }\n    return function (strings) {\n        var replacements = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            replacements[_i - 1] = arguments[_i];\n        }\n        return runScript(strings, replacements, __assign({ language: 'JavaScript' }, scriptOrOptions));\n    };\n}\nosascript.jxa = execJXA;\nexports.jxa = execJXA;\nexports.default = osascript;\n", "import { Form, Action, ActionPanel, Clipboard, popToRoot } from \"@raycast/api\";\nimport checkForInstallation from \"./utilities/checkForInstallation\";\nimport { runcURLCommand } from \"./utilities/jsa\";\nimport { useEffect, useState } from \"react\";\n\ninterface CommandValues {\n  command: string;\n}\n\nexport default function viewFromcURLCommand() {\n  const [command, setCommand] = useState<string>(\"\");\n  const [commandError, setCommandError] = useState<string | undefined>();\n  const errorMessage = \"Please provide the cURL command.\";\n\n  function dropCommandErrorIfNeeded(value: string) {\n    const string = value;\n    setCommandError(undefined);\n    setCommand(string);\n  }\n\n  useEffect(() => {\n    checkForInstallation().then((isInstalled) => {\n      if (isInstalled) {\n        Clipboard.readText().then((res) => {\n          if (res && res.startsWith(\"curl \")) {\n            setCommand(res);\n          }\n        });\n      }\n    });\n  }, []);\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm\n            onSubmit={(values: CommandValues) => {\n              const command = values.command;\n              if (command && command.startsWith(\"curl \")) {\n                runcURLCommand(command);\n                popToRoot();\n              } else {\n                if (command) {\n                  setCommandError(\"cURL command should start with \u201Ccurl\u201D.\");\n                } else {\n                  setCommandError(errorMessage);\n                }\n              }\n            }}\n          />\n        </ActionPanel>\n      }\n    >\n      <Form.TextArea\n        id=\"command\"\n        value={command}\n        error={commandError}\n        onChange={dropCommandErrorIfNeeded}\n        title=\"cURL\"\n        placeholder=\"Run cURL command in OK JSON\"\n      />\n    </Form>\n  );\n}\n", "import { getApplications, open, Alert, confirmAlert, popToRoot } from \"@raycast/api\";\n\nasync function isInstalled() {\n  const applications = await getApplications();\n  const result = applications.some(({ bundleId }) => bundleId === \"net.shinystone.OKJSON\");\n  return result;\n}\n\nexport default async function checkForInstallation() {\n  const installed = await isInstalled();\n  if (!installed) {\n    const alertOptions: Alert.Options = {\n      title: \"OK JSON is not installed.\",\n      message: \"Do you want to install it right now?\",\n      primaryAction: {\n        title: \"Install\",\n        onAction: async () => {\n          open(\"https://apps.apple.com/app/ok-json-offline-private/id1576121509?mt=12\");\n          await popToRoot({ clearSearchBar: false });\n        },\n      },\n      dismissAction: {\n        title: \"Cancel\",\n        onAction: async () => {\n          await popToRoot({ clearSearchBar: false });\n        },\n      },\n    };\n    await confirmAlert(alertOptions);\n    return Promise.resolve(false);\n  } else {\n    return Promise.resolve(true);\n  }\n}\n", "import { showToast, Toast } from \"@raycast/api\";\nimport osascript from \"osascript-tag\";\n\nexport interface Script {\n  id: string;\n  name: string;\n  description: string;\n  path: string;\n}\n\nexport const executeJxa = async (script: string, list?: string[]) => {\n  try {\n    const result = await osascript.jxa({ parse: true, argv: list })`${script}`;\n    return result;\n  } catch (err: unknown) {\n    if (typeof err === \"string\") {\n      const message = err.replace(\"execution error: Error: \", \"\");\n      if (message.match(/Application can't be found/)) {\n        showToast({\n          style: Toast.Style.Failure,\n          title: \"Application not found\",\n          message: \"Things must be running\",\n        });\n      } else {\n        showToast({\n          style: Toast.Style.Failure,\n          title: \"Something went wrong\",\n          message: message,\n        });\n      }\n    }\n  }\n};\n\nexport const getScripts = () => {\n  return executeJxa(`\n\t\tconst okjson = Application('net.shinystone.OKJSON');\n\t\treturn okjson.scripts().map(val => {\n\t\t\treturn {\n\t\t\t\tid: val.id(),\n\t\t\t\tname: val.name(),\n\t\t\t\ticon: val.icon(),\n\t\t\t\tdescription: val.scriptdescription(),\n\t\t\t\tpath: val.path(),\n\t\t\t}\n\t\t})\n\t`);\n};\n\nexport const runScript = (scriptID: string, input?: string) => {\n  if (input) {\n    return executeJxa(\n      `\n\t\tconst okjson = Application('net.shinystone.OKJSON');\n    const input = argv[0]\n\t\tokjson.runScript(\"${scriptID}\", { with: input })\n\t`,\n      [input],\n    );\n  } else {\n    return executeJxa(`\n\t\tconst okjson = Application('net.shinystone.OKJSON');\n\t\tokjson.runScript(\"${scriptID}\")\n\t`);\n  }\n};\n\nexport const runcURLCommand = (string: string) => {\n  return executeJxa(\n    `\n\t\tconst okjson = Application('net.shinystone.OKJSON');\n    const text = argv[0]\n\t\tokjson.runCURLCommand(text)\n\t`,\n    [string],\n  );\n};\n\nexport const viewFromURLScript = (string: string) => {\n  return executeJxa(\n    `\n    const okjson = Application('net.shinystone.OKJSON');\n    const text = argv[0]\n    okjson.viewFromURL(text)\n\t`,\n    [string],\n  );\n};\n"],
  "mappings": "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",
  "names": ["require_dist", "__commonJSMin", "exports", "__assign", "s", "i", "n", "p", "__importStar", "mod", "result", "k", "ChildProcess", "isTemplateString", "value", "buildString", "strings", "replacements", "totalStrings", "runScript", "options", "resolve", "reject", "argv", "flags", "script", "language", "child", "errorString", "error", "dataString", "data", "osascript", "scriptOrOptions", "replacementsArray", "_i", "execJXA", "viewFromcURLCommand_exports", "__export", "viewFromcURLCommand", "__toCommonJS", "import_api", "import_api", "isInstalled", "bundleId", "checkForInstallation", "import_api", "import_osascript_tag", "executeJxa", "script", "list", "osascript", "err", "message", "runcURLCommand", "string", "executeJxa", "import_react", "import_jsx_runtime", "viewFromcURLCommand", "command", "setCommand", "commandError", "setCommandError", "errorMessage", "dropCommandErrorIfNeeded", "value", "string", "checkForInstallation", "isInstalled", "res", "values", "runcURLCommand"]
}
